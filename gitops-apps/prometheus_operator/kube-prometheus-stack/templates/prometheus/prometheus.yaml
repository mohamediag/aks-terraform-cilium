---
# Source: kube-prometheus-stack/templates/prometheus/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus-operator-kube-p-prometheus
  namespace: prometheus-operator
  labels:
    app: kube-prometheus-stack-prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "76.4.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-76.4.0
    release: "prometheus-operator"
    heritage: "Helm"
spec:
  automountServiceAccountToken: true
  alerting:
    alertmanagers:
      - namespace: prometheus-operator
        name: prometheus-operator-kube-p-alertmanager
        port: http-web
        pathPrefix: "/"
        apiVersion: v2
  image: "quay.io/prometheus/prometheus:v3.5.0"
  imagePullPolicy: "IfNotPresent"
  version: v3.5.0
  externalUrl: http://prometheus-operator-kube-p-prometheus.prometheus-operator:9090
  paused: false
  replicas: 1
  shards: 1
  logLevel:  info
  logFormat:  logfmt
  listenLocal: false
  enableOTLPReceiver: false
  enableAdminAPI: false
  retention: "10d"
  tsdb:
    outOfOrderTimeWindow: 0s
  walCompression: true
  routePrefix: "/"
  serviceAccountName: prometheus-operator-kube-p-prometheus
  serviceMonitorSelector:
    matchLabels:
      release: "prometheus-operator"

  serviceMonitorNamespaceSelector: {}
  podMonitorSelector:
    matchLabels:
      release: "prometheus-operator"

  podMonitorNamespaceSelector: {}
  probeSelector:
    matchLabels:
      release: "prometheus-operator"

  probeNamespaceSelector: {}
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      release: "prometheus-operator"

  scrapeConfigSelector:
    matchLabels:
      release: "prometheus-operator"

  scrapeConfigNamespaceSelector: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:            
            - {key: app.kubernetes.io/name, operator: In, values: [prometheus]}
            - {key: app.kubernetes.io/instance, operator: In, values: [prometheus-operator-kube-p-prometheus]}
  portName: http-web
  hostNetwork: false
